upstream kong_backend {
    # Health check enabled
    server kong:8000 max_fails=3 fail_timeout=30s;
    # Add more Kong instances for scaling:
    # server kong2:8000 max_fails=3 fail_timeout=30s;
    # server kong3:8000 max_fails=3 fail_timeout=30s;
}

upstream kong_admin {
    # Admin API backend
    server kong:8001 max_fails=3 fail_timeout=30s;
    # Add more Kong admin instances:
    # server kong2:8001 max_fails=3 fail_timeout=30s;
    # server kong3:8001 max_fails=3 fail_timeout=30s;
}

server {
    listen 80;
    server_name localhost;

    # Kong Proxy Load Balancer
    location / {
        proxy_pass http://kong_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Health check
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Load balancing method
        # ip_hash; # Uncomment for session affinity
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

server {
    listen 8001;
    server_name localhost;

    # Kong Admin API Load Balancer (restrict access in production!)
    location / {
        # Restrict to specific IPs in production
        # allow 192.168.1.0/24;
        # allow 10.0.0.0/8;
        # deny all;
        
        proxy_pass http://kong_admin;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}
